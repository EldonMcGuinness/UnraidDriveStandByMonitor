Menu="DriveStandbyMonitor:1"
Title="Standby Averages"
Tag="logo-x16.png"
Markdown="false"
---
<?
#Pull some default data
libxml_use_internal_errors(true); # Suppress any warnings from xml errors.

$scriptName = "DriveStandbyMonitor";
$docroot = $docroot ?? $_SERVER['DOCUMENT_ROOT'] ?: '/usr/local/emhttp';
$pluginRoot = "$docroot/plugins/$scriptName";
include_once( "./plugins/$scriptName/includes/page.php" );

$DSM = new DisksInfo( $disks );
$DB = new DSMDB( $DB_FILE );

# Temporary storage for $disk array that is being manipulated
$DRIVE_STATUS = array();

while ( $data = $DB->getStandbyDisks() ){
    $DRIVE_STATUS[ $data["drive"] ]['standby'] = $data["count"];
}

while ( $data = $DB->getLiveDisks() ){
    $DRIVE_STATUS[ $data["drive"] ]['live'] = $data["count"];
}

if( count($DRIVE_STATUS) !== 0 ) {

    # Calculate AVG & Set Name
    foreach ( $DRIVE_STATUS as $key => $val){
        $live = isset( $val['live'] ) ? $val['live'] : 0;
        $standby = isset( $val['standby'] ) ? $val['standby'] : 0;

        $DRIVE_STATUS[$key]['name'] = $DSM->getDeviceName( $key );
        $DRIVE_STATUS[$key]['device'] = $DSM->getDevice( $key );

        if ($standby < 1) {
            $DRIVE_STATUS[$key]['avg'] = 0;
        }else{
            $DRIVE_STATUS[$key]['avg'] = round( ( 100 * ( $standby / ($live + $standby) ) ), 2 );
        }
    }

    # Sort the list
    DSMTools::diskSort($DRIVE_STATUS);

}
?>
<style type="text/css">
.DSM-wrapper {
    width: 100%;
}

.DSM-container {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;

}

.DSM-drive {
    display: flex;
    flex-direction: column;
    min-width: 150px;
    min-height: 150px;
    justify-content: center;
    align-items: center;
}

.DSM-drive .header i{
    font-size: 64px;
}

.DSM-drive .body{
    display: flex;
    flex-direction: row;
}

.DSM-drive .body .name{
    margin-right: 10px;
}

.DSM-reset-db {
    width: 150px;
    text-align: center;
}
</style>

<div class="DSM-wrapper">
    <div class="DSM-container">
        <?if( count($DRIVE_STATUS) === 0 ) {?>
        No data has been collected yet.
        Please wait up to 20 minutes for an update to occur.
        <?}else{?>
            <? foreach ( $DRIVE_STATUS as $key => $val) { ?>
            <div class="DSM-drive" title="This drive has been asleep for <? print($val['avg']); ?>% of the monitored time.">
                <div class="header">
                    <div class="image">
                        <i class="fa fa-hdd-o big white-text"></i>
                    </div>
                </div>
                <div class="body">
                    <div class="name">
                        <?=$val['name']; ?>
                    </div>
                    <div class="data">
                        <? print($val['avg']); ?>%
                    </div>
                </div>
            </div>
            <? } ?>
        <? } ?>
    </div>
    <div class="DSM-container">
        <div class="DSM-reset-db">
            <input type="button" id="DSM-reset-db" value="Reset DB" />
        </div>
    </div>
</div>
<script type="text/javascript">

async function resetDB(){
    const response = await fetch("/plugins/<?=$scriptName?>/reset_db.php", { "reset" : 1 } );
    const json = await response.json();
    window.location.reload(true);
    // Do some error checking later
}

document.addEventListener( 'DOMContentLoaded', () => {
    document.querySelector("#DSM-reset-db").addEventListener("click", () => {
        
        const confirmation = confirm("Are you sure you want to delete all previously logged data?\nThis cannot be undone.");
        
        if ( confirmation ) {
            resetDB();
        }
        
    });
});

</script>