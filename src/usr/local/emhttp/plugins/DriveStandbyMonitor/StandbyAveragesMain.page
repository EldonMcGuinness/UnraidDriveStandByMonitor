Menu="Main:4"
Title="Standby Averages"
Tag="leaf green"
Markdown="false"
---
<?

/* Adjustments for 6.12 UI changes. */
if (version_compare($version['version'], '6.12.0-beta5', '>')) {
        $title_classid  = "class='title'";
        $new_model              = true;
} else {
        $title_classid  = "id='title'";
        $new_model              = false;
}

#Pull some default data
libxml_use_internal_errors(true); # Suppress any warnings from xml errors.
$docroot = $docroot ?? $_SERVER['DOCUMENT_ROOT'] ?: '/usr/local/emhttp';
$script = "DriveStandbyMonitor";
$defaults = @parse_ini_file("$docroot/plugins/DriveStandbyMonitor/default.cfg") ?: [];
$DB_LOCATION = $defaults["DB_LOCATION"];


$DB_FILE = "${DB_LOCATION}/monitor.db";
$DRIVE_STATUS = array();

$sql_standby = "SELECT 'standby'.'drive', count('standby'.'state') AS count from 'standby' where 'standby'.'state' == 0 group by 'standby'.'drive';";
$sql_live = "SELECT 'standby'.'drive', count('standby'.'state') AS count from 'standby' where 'standby'.'state' == 1 group by 'standby'.'drive';";

# Get the DB info and data on the drives
$sqlite = new SQLite3( $DB_FILE );
$live_result = $sqlite->query( $sql_live );
$standby_result = $sqlite->query( $sql_standby );

# Sorter for DRIVE_STATUS
function alphasort($a, $b){
    if ($a == $b) return 0;
    return ($a < $b) ? -1 : 1;
}

while ($data = $live_result->fetchArray(SQLITE3_ASSOC)){
    $DRIVE_STATUS[ $data["drive"] ]['live'] = $data["count"];
}

while ($data = $standby_result->fetchArray(SQLITE3_ASSOC)){
    $DRIVE_STATUS[ $data["drive"] ]['standby'] = $data["count"];
}

if( count($DRIVE_STATUS) === 0 ) {
    print("No data has been collected yet\n");
    print("Please wait up to 20 minutes for an update to occur.\n");

}else{

    # Calculate AVG
    foreach ( $DRIVE_STATUS as $key => $val){
        $live = isset( $val['live'] ) ? $val['live'] : 0;
        $standby = isset( $val['standby'] ) ? $val['standby'] : 0;

        if ($standby < 1) {
            $DRIVE_STATUS[$key]['avg'] = 0;
        }else{
            $DRIVE_STATUS[$key]['avg'] = round( ( 100 * ( $standby / ($live + $standby) ) ), 2 );
        }
    }

    # Sort the list
    uksort($DRIVE_STATUS,"alphasort");

}
?>

<script type="text/javascript" src="<?autov('/webGui/javascript/jquery.switchbutton.js')?>"></script>
<link type="text/css" rel="stylesheet" href="<?autov('/webGui/styles/jquery.ui.css')?>">
<link type="text/css" rel="stylesheet" href="<?autov('/webGui/styles/jquery.switchbutton.css')?>">
<style type="text/css">

</style>

<div class="show-standby">
    <table class="disk_status wide">
        <thead>
            <tr style="cursor: help;">
                <td title="">Device</td>
                <td></td>
                <td title="" style="text-align:center;">Standby</td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
            </tr>
        </thead>
        <tbody>
        <? foreach ( $DRIVE_STATUS as $key => $val) : ?>
            <tr>
                <td>
                    <span class="view"></span>
                    <span class="info"></span>
                    <i class="icon-disk icon"></i>
                    <? print($key); ?>
                </td>
                <td></td>
                <td style="text-align:center;">
                    <? print($val['avg'] . '%'); ?>
                </td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
            </tr>
        <? endforeach; ?>
        </tbody>
    </table>
</div>

<script type="text/javascript">
function get_tab_title_by_name(name) {
    var tab = $("input[name$=tabs] + label").filter(function(){return $(this).text() === name;}).prev();
<?if ($new_model):?>
    var title = $("div.title > span.left").filter(function(){return $(this).text() === name;}).parent();
<?else:?>
    var title = $("div#title > span.left").filter(function(){return $(this).text() === name;}).parent();
<?endif;?>
    if (tab.length) {
        rc = tab;
    } else if (title.length) {
        rc = title;
    } else {
        rc = $(document);
    }

    return rc;
}

function addButton(Button, Name, autoHide = true, Append = true) {
    var Target = get_tab_title_by_name(Name);
    var elementId = 'event-' + new Date().getTime() * Math.floor(Math.random()*100000);
    var element = $("<span id='"+elementId+"' class='status'>"+Button+"</span>");

    rc = true;
    if (element.find("input[type='button']").length) {
        element.addClass("vhshift");
        element.find("input[type='button']").prop("style","padding-top: 5px; padding-bottom: 5px; margin-top:-3px; margin-bottom:0;");
    }

    if (Target.prop('nodeName') === "DIV") {
        element.addClass("vhshift");
        if (Append) {
            Target.append(element);
        } else {
            Target.prepend(element);
        }
    } else if (Target.prop('nodeName') === "INPUT") {
        element.css("display","none");

        if (Append) {
            $('.tabs').append(element);
        } else {
            $('.tabs').prepend(element);
        }

        Target.bind({click:function() {
            $('#'+elementId).fadeIn('slow');}
        });

        if (Target.is(':checked') || (! autoHide)) {
            $('#'+elementId).fadeIn('slow');
        }

        $("input[name$=tabs]").each(function() {
            if (! $(this).is(Target) && autoHide ) {
                $(this).bind({click:function() {
                    $('#'+elementId).fadeOut('slow');}
                });
            }
        });
    } else {
            rc = false;
    }

    return rc;
}

document.addEventListener( 'DOMContentLoaded', () => {
    addButtonTab(
	'<a style="cursor:pointer" class="tooltip" title="More Info" href="/Tools/DriveStandbyMonitor"><i class="fa fa-info-circle fa-switch"></i></a>',
	'Standby Averages'
    );
    addButtonTab(
        '<a style="cursor:pointer" class="tooltip" title="Show Devices" ><input type="checkbox" class="standby-switch"></a>',
        'Standby Averages'
    );


    $('.standby-switch').switchButton(
        { 
            labels_placement: "left",
            on_label: "Show",
            off_label: "Show",
            checked: $.cookie('standby-view') != 'false'
        }
    );

    $('.standby-switch').change( () => {
        $('.show-standby').slideToggle('slow');
        $.cookie('standby-view', $('.standby-switch').is(':checked') ? 'true' : 'false', { expires: 3650, path:'/' });
    });

    /* Update the show-standby status. */
    if ($.cookie('standby-view') == 'false') {
        $('.show-standby').slideToggle('slow');
    }

});
</script>
